{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAcJ,SAASC,cAAc,mBAsB3C,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAM,CAAEF,WAAUC,SAClBE,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACLN,EACFI,EAAIL,GAEJM,EAAIN,E,GAELD,E,IA/BPS,QAAQC,IAAIf,GAEZH,EAAKmB,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAMC,iBAEN,IADA,IAAIC,EAAQC,OAAOpB,EAAWqB,OACrBC,EAAI,EAAGA,GAAKpB,EAAYmB,MAAOC,GAAK,EAC3CnB,EAAcmB,EAAGH,GACdI,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBV,EAAA8B,OAAOC,QAAQ,qBAAoCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE1DuB,OAAM,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBV,EAAA8B,OAAOI,QAAQ,oBAAmCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAG5Dc,GAASC,OAAOnB,EAAUoB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\n\nconsole.log(delayInput);\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  let delay = Number(delayInput.value);\n  for (let i = 1; i <= amountInput.value; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += Number(stepInput.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const obj = { position, delay };\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        res(obj);\n      } else {\n        rej(obj);\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","obj","shouldResolve","Math","random","Promise","res","rej","setTimeout","console","log","addEventListener","event","preventDefault","delay1","Number","value","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.08c177c7.js.map"}